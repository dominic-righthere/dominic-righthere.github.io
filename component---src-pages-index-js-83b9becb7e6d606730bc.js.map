{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/canvas.js","webpack:///./src/pages/index.js"],"names":["Header","Footer","Date","getFullYear","toString","Layout","props","children","Canvas","draw","height","width","canvas","React","useRef","useEffect","animationFrameId","frameCount","context","current","getContext","render","window","requestAnimationFrame","cancelAnimationFrame","className","ref","Index","useState","document","body","clientWidth","setWidth","handleWindowResize","addEventListener","removeEventListener","StrictMode","title","src","frameBorder","scrolling","ctx","stageWidth","stageHeight","amplitude","pointGap","clearRect","beginPath","fillStyle","cpx","cpy","prevX","prevY","moveTo","lineTo","i","totalPoints","Math","sin","quadraticCurveTo","fill","closePath"],"mappings":"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","file":"component---src-pages-index-js-83b9becb7e6d606730bc.js","sourcesContent":["import React from \"react\"\n\nconst Header = () => {\n\n    return (\n        <header>\n            \n            \n        </header>\n\n    )\n}\n\nexport default Header","import React from \"react\"\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>\n                _ Right Here &copy; {new Date().getFullYear().toString()}{\" \"}\n            </p>\n        </footer>\n\n    )\n}\n\nexport default Footer","import React from \"react\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\n\nconst Layout = props => {\n  return (\n    <>\n      <Header />\n      {props.children}\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Canvas = ({ draw, height, width }) => {\n  const canvas = React.useRef();\n\n  React.useEffect(\n    () => {\n      let frameCount = 0;\n      let animationFrameId;\n\n      const context = canvas.current.getContext(\"2d\");\n\n      const render = () => {\n        frameCount++;\n        draw(context, frameCount);\n        animationFrameId = window.requestAnimationFrame(render);\n      };\n      render();\n\n      return () => {\n        window.cancelAnimationFrame(animationFrameId);\n      };\n    }\n  );\n\n  return <canvas className=\"canvas\" ref={canvas} height={height} width={width} />;\n}\n\nCanvas.propTypes = {\n  draw: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nexport default Canvas;\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Canvas from \"../components/canvas\"\nimport \"../components/style.css\"\n\nconst Index = () => {\n\n\n  const [width, setWidth] = React.useState(document.body.clientWidth);\n\n  const handleWindowResize = () => {\n    setWidth(document.body.clientWidth);\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n\n\n  const draw = (ctx, frameCount) => {\n\n    let stageWidth = document.body.clientWidth;\n\n    let stageHeight = ctx.canvas.height;\n    let totalPoints = 7;\n    //let amplitude = Math.sin(frameCount/speed)*100;\n    let amplitude = width / 10;\n    let pointGap = stageWidth / (totalPoints - 1);\n    let speed = 20;\n    //update position here\n    ctx.clearRect(0, 0, stageWidth, stageHeight);\n    ctx.beginPath();\n    ctx.fillStyle = \"#E65C4F\";\n\n\n\n    let prevX = 0;\n    let prevY = stageHeight;\n\n    ctx.moveTo(prevX, prevY);\n    prevY = prevY / 2;\n    ctx.lineTo(prevX, prevY);\n\n    let cpx;\n    let cpy;\n\n    for (let i = 1; i < totalPoints - 1; i++) {\n\n      cpx = (prevX + pointGap * (i)) / 2;\n      cpy = (prevY + Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2) / 2;\n\n      ctx.quadraticCurveTo(prevX, prevY, cpx, cpy);\n\n      prevX = pointGap * (i);\n      prevY = Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2;\n\n    }\n    ctx.quadraticCurveTo(prevX, prevY, stageWidth, stageHeight / 2);\n    ctx.lineTo(stageWidth, stageHeight);\n    ctx.fill();\n    ctx.closePath();\n\n\n\n    // new\n\n    ctx.beginPath();\n    amplitude = width / 29;\n    ctx.fillStyle = \"#78A6C9\"; //lightblue\n    prevY = stageHeight;\n    prevX = 0;\n    ctx.moveTo(0, prevY);\n    prevY = prevY / 2;\n    ctx.lineTo(prevX, prevY);\n    for (let i = 1; i < totalPoints - 1; i++) {\n      cpx = (prevX + pointGap * (i)) / 2;\n      cpy = (prevY + Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2) / 2;\n      ctx.quadraticCurveTo(prevX, prevY, cpx, cpy);\n      prevX = pointGap * (i);\n      prevY = Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2;\n    }\n    ctx.quadraticCurveTo(prevX, prevY, stageWidth, stageHeight / 2);\n    ctx.lineTo(stageWidth, stageHeight);\n    ctx.fill();\n    ctx.closePath();\n\n    // new\n\n    ctx.beginPath();\n    amplitude = width / 20;\n    ctx.fillStyle = \"#33678A\"; //deepblue\n    prevY = stageHeight;\n    prevX = 0;\n    ctx.moveTo(0, prevY);\n    prevY = prevY / 2;\n    ctx.lineTo(prevX, prevY);\n    for (let i = 1; i < totalPoints - 1; i++) {\n      cpx = (prevX + pointGap * (i)) / 2;\n      cpy = (prevY + Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2) / 2;\n      ctx.quadraticCurveTo(prevX, prevY, cpx, cpy);\n      prevX = pointGap * (i);\n      prevY = Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2;\n    }\n    ctx.quadraticCurveTo(prevX, prevY, stageWidth, stageHeight / 2);\n    ctx.lineTo(stageWidth, stageHeight);\n    ctx.fill();\n    ctx.closePath();\n\n    // new\n\n    ctx.beginPath();\n    amplitude = width / 15;\n    ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n    prevY = stageHeight;\n    prevX = 0;\n    ctx.moveTo(0, prevY);\n    prevY = prevY / 2;\n    ctx.lineTo(prevX, prevY);\n    for (let i = 1; i < totalPoints - 1; i++) {\n      cpx = (prevX + pointGap * (i)) / 2;\n      cpy = (prevY + Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2) / 2;\n      ctx.quadraticCurveTo(prevX, prevY, cpx, cpy);\n      prevX = pointGap * (i);\n      prevY = Math.sin(\n        (frameCount / speed) + pointGap * (i)\n      ) * amplitude + stageHeight / 2;\n    }\n    ctx.quadraticCurveTo(prevX, prevY, stageWidth, stageHeight / 2);\n    ctx.lineTo(stageWidth, stageHeight);\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  return (\n\n    <React.StrictMode>\n      <Layout>\n        <div className=\"title\">\n          <h1>_ Right Here</h1>\n\n          <iframe\n            title=\"GitHub link\"\n            src=\"https://ghbtns.com/github-btn.html?user=dominic-righthere&repo=dominic-righthere.github.io&type=star&count=true\"\n            frameBorder=\"0\"\n            scrolling=\"0\"\n            width=\"160px\"\n            height=\"30px\"\n          />\n\n          <h2>Hi, <br></br>I live and work in Tokyo building _ things.</h2>\n        </div>\n        <body>\n          <Canvas draw={draw} height={width / 3} width={width} />\n        </body>\n\n      </Layout>\n    </React.StrictMode>\n\n  )\n}\nexport default Index"],"sourceRoot":""}