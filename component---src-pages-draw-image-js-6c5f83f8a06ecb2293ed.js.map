{"version":3,"sources":["webpack:///./src/pages/drawImage.js"],"names":["drawImageProp","ctx","img","x","y","w","h","offsetX","offsetY","canvas","width","height","cx","cy","cw","ch","iw","ih","r","Math","min","nw","nh","ar","abs","drawImage"],"mappings":"2FAMe,SAASA,EAAT,GAAuE,IAAD,aAAJ,GAAI,EAA9CC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,EAAGC,EAAiC,EAAjCA,EAAGC,EAA8B,EAA9BA,EAAGC,EAA2B,EAA3BA,EAAGC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,QAEnD,iBAANL,IAAgBA,EAAI,GACd,iBAANC,IAAgBA,EAAI,GACd,iBAANC,IAAgBA,EAAIJ,EAAIQ,OAAOC,OACzB,iBAANJ,IAAgBA,EAAIL,EAAIQ,OAAOE,QACnB,iBAAZJ,IAAsBA,EAAU,IACpB,iBAAZC,IAAsBA,EAAU,IAGvCD,EAAU,IAAGA,EAAU,GACvBC,EAAU,IAAGA,EAAU,GACvBD,EAAU,IAAGA,EAAU,GACvBC,EAAU,IAAGA,EAAU,GAE3B,IAKEI,EACAC,EACAC,EACAC,EAREC,EAAKd,EAAIQ,MACXO,EAAKf,EAAIS,OACTO,EAAIC,KAAKC,IAAIf,EAAIW,EAAIV,EAAIW,GACzBI,EAAKL,EAAKE,EACVI,EAAKL,EAAKC,EAKVK,EAAK,EAGHF,EAAKhB,IAAGkB,EAAKlB,EAAIgB,GACjBF,KAAKK,IAAID,EAAK,GAAK,OAASD,EAAKhB,IAAGiB,EAAKjB,EAAIgB,IAQjDV,GAAMI,GAHNF,EAAKE,IAJLK,GAAME,GAIUlB,KAGCE,GAIR,IAAGK,EAAK,IAHjBC,GAAMI,GAHNF,EAAKE,IAJLK,GAAMC,GAIUjB,KAGCE,GAIR,IAAGK,EAAK,GACbC,EAAKE,IAAIF,EAAKE,GACdD,EAAKE,IAAIF,EAAKE,GAGlBhB,EAAIwB,UAAUvB,EAAKU,EAAIC,EAAIC,EAAIC,EAAIZ,EAAGC,EAAGC,EAAGC,GApD9C","file":"component---src-pages-draw-image-js-6c5f83f8a06ecb2293ed.js","sourcesContent":["/** \n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\n * Original By Ken Fyrstenberg Nilsen\n * \n * Note: img must be fully loaded or have correct width & height set.\n */\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\n  // Defaults\n  if (typeof x !== \"number\") x = 0;\n  if (typeof y !== \"number\") y = 0;\n  if (typeof w !== \"number\") w = ctx.canvas.width;\n  if (typeof h !== \"number\") h = ctx.canvas.height;\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\n\n  // keep bounds [0.0, 1.0]\n  if (offsetX < 0) offsetX = 0;\n  if (offsetY < 0) offsetY = 0;\n  if (offsetX > 1) offsetX = 1;\n  if (offsetY > 1) offsetY = 1;\n\n  var iw = img.width,\n    ih = img.height,\n    r = Math.min(w / iw, h / ih),\n    nw = iw * r, // new prop. width\n    nh = ih * r, // new prop. height\n    cx,\n    cy,\n    cw,\n    ch,\n    ar = 1;\n\n  // decide which gap to fill\n  if (nw < w) ar = w / nw;\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\n  nw *= ar;\n  nh *= ar;\n\n  // calc source rectangle\n  cw = iw / (nw / w);\n  ch = ih / (nh / h);\n\n  cx = (iw - cw) * offsetX;\n  cy = (ih - ch) * offsetY;\n\n  // make sure source rectangle is valid\n  if (cx < 0) cx = 0;\n  if (cy < 0) cy = 0;\n  if (cw > iw) cw = iw;\n  if (ch > ih) ch = ih;\n\n  // fill image in dest. rectangle\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\n}\n"],"sourceRoot":""}